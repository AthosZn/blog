<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shimh.dao.FansDao" >
  <resultMap id="BaseResultMap" type="com.shimh.entity.relation.Fans" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="fans_uid" property="fansUid" jdbcType="BIGINT" />
    <result column="relation_type" property="relationType" jdbcType="BIT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, `uid`, fans_uid, relation_type, created_time, updated_time
  </sql>

  <select id="selectByUid" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from fans
    where  `uid`=#{uid,jdbcType=BIGINT}
    and relation_type in (1,2)
  </select>

  <select id="getFansByPages" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from fans
    where  `uid`=#{uid,jdbcType=BIGINT}
    and relation_type in (1,2)
    order by created_time DESC,id DESC
    limit #{breakPoint,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
  </select>

  <select id="getFansCount"  resultType="java.lang.Integer" parameterType="java.lang.Long" >
    select count(1)
    from fans
    where  `uid`=#{uid,jdbcType=BIGINT}
    and relation_type in (1,2)
  </select>

  <select id="selectFriend" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from fans
    where  `uid`=#{uid,jdbcType=BIGINT}
    and relation_type =2
  </select>

  <select id="selectFriendByPages" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from fans
    where  `uid`=#{uid,jdbcType=BIGINT}
    and relation_type =2
    limit #{breakPoint,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
  </select>


  <select id="selectFriendByUids" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from fans
    where
    <if test="uids!=null and uids.size()!=0">
      and `uid` in
      <foreach item="item" index="index" collection="uid" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    and relation_type =2
  </select>



  <select id="selectByUidAndFansUid" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from fans
    where  `uid`=#{uid,jdbcType=BIGINT}
    and  `fans_uid`=#{fansUid,jdbcType=BIGINT}
  </select>

  <insert id="insert" parameterType="com.shimh.entity.relation.Fans" >
    insert into fans ( `uid`, fans_uid,
      relation_type, created_time, updated_time
      )
    values ( #{uid,jdbcType=BIGINT}, #{fansUid,jdbcType=BIGINT},
      #{relationType,jdbcType=BIT}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>

  <update id="update" parameterType="map" >
    update fans
    set id = #{id,jdbcType=INTEGER},
    `uid` = #{uid,jdbcType=BIGINT},
    fans_uid = #{fansUid,jdbcType=BIGINT},
    relation_type = #{relationType,jdbcType=BIT},
    updated_time = #{updatedTime,jdbcType=TIMESTAMP}
     where  `id`=#{id,jdbcType=INTEGER}
  </update>

  <select id="getNewFansCount" parameterType="map" resultType="int">
    select count(1)
    from fans
    where `uid`=#{uid,jdbcType=BIGINT}
    and created_time>#{startTime,jdbcType=TIMESTAMP}
  </select>

  <select id="getNewFanList" parameterType="map" resultMap="BaseResultMap">
    select *
    from fans
    where `uid`=#{uid,jdbcType=BIGINT}
    and created_time>#{startTime,jdbcType=TIMESTAMP}
    order by created_time desc,`id` desc
    limit #{start,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>

</mapper>
